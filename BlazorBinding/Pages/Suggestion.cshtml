@page "/sugg"

@if (values == null)
{
    <span>Loading random list of names for the auto-complete list.</span>
}
else
{
    <span>There are @values?.Count names in the auto-complete list.</span>
}

<AutoComplete AllowedValues="@values">
    <ListItemContent>
        <span>@context</span>
    </ListItemContent>
</AutoComplete>

<span>Page Code </span><DisplayCode Language="CSharp" Code="@PageContents" />

@functions
{
[Inject] HttpClient httpClient { get; set; }

string[] PageContents;
List<string> values;

protected override async Task OnParametersSetAsync()
{
    await base.OnParametersSetAsync();
    Task.Factory.StartNew(LoadData);
}
void LoadData()
{
    values = A.ListOf<Person>(200).Select(p => $"{p.FirstName} {p.LastName}").Distinct().ToList();
    Task.Factory.StartNew(async () => await LoadCode());
    StateHasChanged();
}
async Task LoadCode()
{
    try
    {
        var stream = await httpClient.GetStringAsync("https://raw.githubusercontent.com/SQL-MisterMagoo/BlazorBinding/master/BlazorBinding/Pages/Suggestion.cshtml");
        PageContents = stream.Split(Environment.NewLine.ToCharArray());
        StateHasChanged();
    }
    catch (Exception ex)
    {
        Console.WriteLine("Failed to load Suggestion.cshtml");
        Console.WriteLine(ex.GetBaseException().Message);
    }
}
class Person
{
    public string FirstName { get; set; }
    public string LastName { get; set; }
    public Person()
    {

    }
}
//
}
