@page "/dia"

<h2>Using CascadingValue To Share A Global Component - Dialog</h2>
<div class="card">
    <h5 class="card-header">Sample form for customising the modal dialog - simple local binding.</h5>
    <div class="card-body">
        <div class="form-group">
            <label for="Title">Title</label>
            <input class="form-control" @bind="@Title" type="text" placeholder="Enter a dialog title" />
        </div>
        <div class="form-group">
            <label for="Body">Body</label>
            <textarea class="form-control" @bind="@Body" placeholder="Enter some body text"></textarea>
        </div>
        <div class="form-group">
            <label for="BtnPri">First Button </label>
            <input class="form-control" @bind="@BtnPri" type="text" placeholder="Enter button 1 text" />
            @if (string.IsNullOrWhiteSpace(BtnPri))
            {
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" @bind="@HidePri" />
                    <label for="ForceEmptyPri">Hide Button? </label>
                </div>
            }
        </div>
        <div class="form-group">
            <label for="BtnSec">Second Button</label>
            <input class="form-control" @bind="@BtnSec" type="text" placeholder="Enter button 2 text" />
            @if (string.IsNullOrWhiteSpace(BtnSec))
            {
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" @bind="@HideSec" />
                    <label for="ForceEmptySec">Hide Button? </label>
                </div>
            }
        </div>
        <button class="btn btn-primary" @onclick="@Clicked">Show Dialog</button>
        @if (!string.IsNullOrWhiteSpace(Message))
        {
          <p>@Message</p>
        }

        <DisplayCode Language="CSharp" Code="@(new[]{
            "void Clicked(MouseEventArgs args)      ",
            "{                                        ",
            "  if (global == null)                      ",
            "  {                                        ",
            "    return;                                  ",
            "  }                                        ",
            "if (!string.IsNullOrWhiteSpace(Title))",
            "    global.MMDialogRef.SetTitle(Title);",
            "",
            "if (!string.IsNullOrWhiteSpace(Body))",
            "    global.MMDialogRef.SetBody(Body);",
            "",
            "if (!string.IsNullOrWhiteSpace(BtnPri) || HidePri)",
            "    global.MMDialogRef.SetBtnPriText(BtnPri);",
            "",
            "if (!string.IsNullOrWhiteSpace(BtnSec) || HideSec)",
            "    global.MMDialogRef.SetBtnSecText(BtnSec);",
            "                                           ",
            "global.MMDialogRef.SetBtnPriCallback(BtnPriCallback);",
            "global.MMDialogRef.SetBtnSecCallback(BtnSecCallback);",
            "                                           ",
            "  global.MMDialogRef.Show();               ",
            "}                                          ",
            "protected void BtnPriCallback(MouseEventArgs args)",
            "{",
            "    Message = $\"User clicked dialog button 1 - {BtnPri}\";",
            "    global?.MMDialogRef?.Hide();",
            "    StateHasChanged();",
            "}",
            "protected void BtnSecCallback(MouseEventArgs args)",
            "{",
            "    Message = $\"User clicked dialog button 2 - {BtnSec}\";",
            "    global?.MMDialogRef?.Hide();",
            "    StateHasChanged();",
            "}",
        })" />
    </div>
</div>

@code
{
  [CascadingParameter(Name = "Global")] MainLayout global { get; set; }

  string Title;
  string Body;
  string BtnPri; bool HidePri;
  string BtnSec; bool HideSec;
  string Message;

  void Clicked(MouseEventArgs args)
  {
      if (global == null)
      {
          Console.WriteLine($"CLICKED No Dialog");
          return;
      }
      if (!string.IsNullOrWhiteSpace(Title))
          global.MMDialogRef.SetTitle(Title);

      if (!string.IsNullOrWhiteSpace(Body))
          global.MMDialogRef.SetBody(Body);

      if (!string.IsNullOrWhiteSpace(BtnPri) || HidePri)
          global.MMDialogRef.SetBtnPriText(BtnPri);

      if (!string.IsNullOrWhiteSpace(BtnSec) || HideSec)
          global.MMDialogRef.SetBtnSecText(BtnSec);

      global.MMDialogRef.SetBtnPriCallback(BtnPriCallback);
      global.MMDialogRef.SetBtnSecCallback(BtnSecCallback);

      global.MMDialogRef.Show();
      Console.WriteLine($"TITLE: {Title}");
      Console.WriteLine($"BODY : {Body}");
      Console.WriteLine($"BTN 1: {BtnPri}");
      Console.WriteLine($"BTN 2: {BtnSec}");
  }
  protected void BtnPriCallback(MouseEventArgs args)
  {
      Message = $"User clicked dialog button 1 - {BtnPri}";
      global?.MMDialogRef?.Hide();
      StateHasChanged();
  }
  protected void BtnSecCallback(MouseEventArgs args)
  {
      Message = $"User clicked dialog button 2 - {BtnSec}";
      global?.MMDialogRef?.Hide();
      StateHasChanged();
  }

}