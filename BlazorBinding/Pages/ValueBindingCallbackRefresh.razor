@page "/vbcr"

<h2>Value Binding With Callback - "Two Way Value Binding - With Refresh"</h2>

<div class="card">
    <h5 class="card-header">This is the parent control</h5>
    <div class="card-body">
        <p class="card-text">Try clicking the checkbox - the second checkbox will also change because of the @@bind-Value parameter.</p>
        <div class="form-group callout-parent @StateHasChangedCss">
            <label for="parent">Click me (parent control)</label>
            <!-- Parent level checkbox -->
            <input id="parent" type="checkbox" @bind="@ParentValue" />
            <!-- /Parent level checkbox -->
        </div>
        <DisplayCode Code="@(new[]{
            "<input id=\"parent\" type=\"checkbox\" bind=\"@ParentValue\" />",
            })"/>
    </div>
</div>
<div class="card">
    <h5 class="card-header">This is the Child control</h5>
    <div class="card-body">
        <p class="card-text">Try clicking the checkbox - <i>it will update the parent Value</i>.</p>
        <div class="form-group callout-child @StateHasChangedCss">
            <!-- Child level checkbox -->
            <CheckBox6 @bind-Value="@ParentValue" />
            <!-- /Child level checkbox -->
        </div>
        <DisplayCode Code="@(new[]{
            " <CheckBox6 bind-Value=\"@ParentValue\" />",
            })"/>
        <p class="card-text">The CheckBox6 implementation : </p>
        <p class="card-text">Here we bind to a local proxy value so we can fire the ValueChanged event when the local value changes.</p>
        <DisplayCode Code="@(new[]{
            "<input type=\"checkbox\" bind=\"@LocalValue\" />",
            })"/>
        <DisplayCode Language="CSharp" 
            Code="@(new[]{
            "@functions {",
            "  bool LocalValue { get { return Value; } set { ValueChanged?.Invoke(value); } })",
            "  [Parameter] protected bool Value { get; set; }",
            "  [Parameter] protected Action<bool> ValueChanged { get; set; })",
            "}",
            })"/>
    </div>
</div>
<p class="card-text">
    Page implementation:
</p>
<DisplayCode Language="CSharp"
    Code="@(new[]{
    "@functions {",
    "bool localParentValue;",
    "bool ParentValue { get { return localParentValue; } set { localParentValue = value; Refresh(null); } }",
    "void Refresh(UIMouseEventArgs args) => StateHasChanged();",
    "}",
    })" />

@functions
{

  bool localParentValue;
  bool ParentValue { get { return localParentValue; } set { localParentValue = value; Refresh(null); } }
  protected void Refresh(UIMouseEventArgs args) { StateHasChanged(); }
  string StateHasChangedCss => ParentValue ? "ping-on" : "ping-off";

}
