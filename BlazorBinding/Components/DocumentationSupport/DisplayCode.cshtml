@using BlazorBinding.Services
@inject ICodeHighlighter CodeHighlighter

@if (Code != null)
{
    <div class="code-highlight-wrap mt-1">
        <a class="btn btn-sm btn-outline-info" onclick="@ToggleCode">@ToggleText code</a>
        @if (displayCode)
        {
            <div class="code-highlight">
                @CodeMarkup
            </div>
        }
    </div>
}

@functions {
bool displayCode = false;
[Parameter] protected string Language { get; set; } = "HTML";
[Parameter] protected string[] Code { get; set; }
MarkupString cache;
private MarkupString CodeMarkup
{
    get
    {
        if (!string.IsNullOrWhiteSpace(cache.Value))
            return cache;

        switch (Language.ToUpper())
        {
            case "HTML":
                cache = (MarkupString)CodeHighlighter.HighlightHtml(string.Join("\n", Code));
                return cache;
            case "CSHARP":
                cache = (MarkupString)CodeHighlighter.HighlightCSharp(string.Join("\n", Code));
                return cache;
        }
        cache = (MarkupString)string.Join("\n", Code);
        return cache;
    }
}

string ToggleText => displayCode ? "hide" : "show";
void ToggleCode()
{
    displayCode = !displayCode;
    StateHasChanged();
}

}